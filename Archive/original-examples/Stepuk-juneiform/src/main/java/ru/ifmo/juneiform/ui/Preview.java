/*
 * Preview.java
 *
 * Created on Mar 25, 2011, 12:23:20 AM
 */
package ru.ifmo.juneiform.ui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.util.LinkedHashSet;
import java.util.Set;
import javax.swing.BorderFactory;
import javax.swing.border.Border;
import ru.ifmo.juneiform.PreviewActionListener;

/**
 *
 * @author Ivan Stepuk
 * @author Oleg Kuznetsov
 */
public class Preview extends javax.swing.JPanel {

    public static final int AUTO = 0;
    public static final int DEFAULT_IMAGE_WIDTH = 130;
    public static final int HORIZONTAL_GAP = 4;
    public static final int VERTICAL_GAP = 16;
    public static final int LABEL_REVERSAL_OFFSET = 16;
    public static final Border SELECTED_BORDER = BorderFactory.createLineBorder(Color.CYAN);
    public static final Border DESELECTED_BORDER = BorderFactory.createLineBorder(Color.DARK_GRAY);
    private Set<PreviewActionListener> listeners = new LinkedHashSet<PreviewActionListener>();
    private BufferedImage original;
    private Image scaled;
    private boolean selected;

    /** Creates new form Preview */
    protected Preview() {
        initComponents();
    }

    public Preview(Image image, String label) {
        this();
        this.addMouseListener(new PreviewMouseAdapter());
        this.original = (BufferedImage) image;
        this.label.setText(label);
    }

    /**
     * Panel size depends on Label's width/height. Ignore everything, just do the stuff.
     */
    @Override
    public void setPreferredSize(Dimension dimension) {
        int width;
        int height;
        
        if (original.getWidth() > DEFAULT_IMAGE_WIDTH) {
            height = (original.getHeight() * DEFAULT_IMAGE_WIDTH) / original.getWidth();
            width = DEFAULT_IMAGE_WIDTH;
        } else {
            height = original.getHeight();
            width = original.getWidth();
        }
        label.setPreferredSize(new Dimension(width, height));
    }

    public void addActionListener(PreviewActionListener listener) {
        listeners.add(listener);
    }

    public void removeActionListener(PreviewActionListener listener) {
        listeners.remove(listener);
    }

    public boolean isSelected() {
        return selected;
    }

    public void setSelected(boolean selected) {
        this.selected = selected;
        
        if (selected) {
            setBorder(SELECTED_BORDER);
        } else {
            setBorder(DESELECTED_BORDER);
        }
    }
    
    @Override
    public void paintComponent(Graphics g) {
        if (scaled == null) {
            scaled = original.getScaledInstance(getWidth(), getHeight() - LABEL_REVERSAL_OFFSET, Image.SCALE_DEFAULT);
        }
        g.drawImage(scaled, 0, 0, getWidth(), getHeight() - LABEL_REVERSAL_OFFSET, null);
    }

    private class PreviewMouseAdapter extends MouseAdapter {

        @Override
        public void mouseClicked(MouseEvent e) {
            for (PreviewActionListener listener : listeners) {
                listener.actionPerformed(Preview.this);
            }
        }

        @Override
        public void mouseEntered(MouseEvent e) {
            setBorder(SELECTED_BORDER);
        }

        @Override
        public void mouseExited(MouseEvent e) {
            if (!isSelected()) {
                setBorder(DESELECTED_BORDER);
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.darkGray));
        setOpaque(false);
        setLayout(new java.awt.BorderLayout());

        label.setForeground(java.awt.Color.white);
        label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label.setText("Label");
        label.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        add(label, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel label;
    // End of variables declaration//GEN-END:variables
}
